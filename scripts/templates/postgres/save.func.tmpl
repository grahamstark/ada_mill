   $procedureHeader   
      params : gse.SQL_Parameters := Get_Configured_Insert_Params;
#for pr in $insertStrings:
      $pr;
#end for;
      ps     : gse.Prepared_Statement := Get_Prepared_Insert_Statement;      
        
      c : d.Criteria;
      local_connection : Database_Connection;
      is_local_connection : Boolean;
   begin
      if( connection = null )then
          local_connection := Connection_Pool.Lease;
          is_local_connection := True;
      else
          local_connection := connection;          
          is_local_connection := False;
      end if;
#if $has_pk:   
      if overwrite and $existsCheck
         $updateCall;
         if( is_local_connection )then
            Connection_Pool.Return_Connection( local_connection );
         end if;
         return;
      end if;
#end if      
#for $cr in $allCriteria:
      $cr;
#end for;
#for $pr in $allParams
      $pr;
#end for;
      declare
         query : constant String := DB_Commons.Add_Schema_To_Query( INSERT_PART, SCHEMA_NAME ) & " ( "  & d.To_Crude_Array_Of_Values( c ) & " )";
      begin
         Log( "save; executing query" & query );
         gse.Execute( local_connection, query );
         Check_Result( local_connection );
      end;   
      if( is_local_connection )then
         Connection_Pool.Return_Connection( local_connection );
      end if;
   end Save;

